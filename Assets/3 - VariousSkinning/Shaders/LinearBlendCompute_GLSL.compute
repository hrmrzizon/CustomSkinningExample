GLSLPROGRAM

#pragma kernel TransfromMesh

StructuredBuffer<float3> vertexBuffer;
StructuredBuffer<float3> normalBuffer;

StructuredBuffer<float3> bonePositionBuffer;
StructuredBuffer<float4> boneRotationBuffer;

StructuredBuffer<float4> boneIndexBuffer;
StructuredBuffer<float4> boneWeightBuffer;

RWStructuredBuffer<float3> vertexStream;
RWStructuredBuffer<float3> normalStream;

inline float4x4 GetMatrix(float3 deltaPos, float4 quat)
{
	float4x4 matrixData;

    float   xx = quat.x * quat.x, xy = quat.x * quat.y, xz = quat.x * quat.z, xw = quat.x * quat.w,
            yy = quat.y * quat.y, yz = quat.y * quat.z, yw = quat.y * quat.w,
            zz = quat.z * quat.z, zw = quat.z * quat.w;
    
    matrixData[0][0] = 1 - 2 * yy - 2 * zz;
    matrixData[0][1] = 2 * xy - 2 * zw;
    matrixData[0][2] = 2 * xz + 2 * yw;

    matrixData[1][0] = 2 * xy + 2 * zw;
    matrixData[1][1] = 1 - 2 * xx - 2 * zz;
    matrixData[1][2] = 2 * yz - 2 * xw;

    matrixData[2][0] = 2 * xz - 2 * yw;
    matrixData[2][1] = 2 * yz + 2 * xw;
    matrixData[2][2] = 1 - 2 * xx - 2 * yy;

    matrixData[0][3] = deltaPos.x;
    matrixData[1][3] = deltaPos.y;
    matrixData[2][3] = deltaPos.z;
    
    /* USLESS CODE
    matrixData[3][0] = 0;
    matrixData[3][1] = 0;
    matrixData[3][2] = 0;
    */
    matrixData[3][3] = 1;

	return matrixData;
}

#define MAX_THREAD 512

[numthreads(MAX_THREAD, 1, 1)]
void TransfromMesh(uint3 threadID : SV_DispatchThreadID)
{
    uint realVertexID = threadID[0];

	float4x4 transformMatrix = GetMatrix(bonePositionBuffer[boneIndexBuffer[realVertexID][0]], boneRotationBuffer[boneIndexBuffer[realVertexID][0]]) * boneWeightBuffer[realVertexID][0];

	if (boneWeightBuffer[realVertexID][1] > 0)
		transformMatrix += GetMatrix(bonePositionBuffer[boneIndexBuffer[realVertexID][1]], boneRotationBuffer[boneIndexBuffer[realVertexID][1]]) * boneWeightBuffer[realVertexID][1];
	if (boneWeightBuffer[realVertexID][2] > 0)
		transformMatrix += GetMatrix(bonePositionBuffer[boneIndexBuffer[realVertexID][2]], boneRotationBuffer[boneIndexBuffer[realVertexID][2]]) * boneWeightBuffer[realVertexID][2];
	if (boneWeightBuffer[realVertexID][3] > 0)
		transformMatrix += GetMatrix(bonePositionBuffer[boneIndexBuffer[realVertexID][3]], boneRotationBuffer[boneIndexBuffer[realVertexID][3]]) * boneWeightBuffer[realVertexID][3];

    vertexStream[realVertexID] = mul(transformMatrix, float4(vertexBuffer[realVertexID], 1)).xyz;
    normalStream[realVertexID] = mul(transformMatrix, float4(normalBuffer[realVertexID], 1)).xyz;
}
 
ENDGLSL